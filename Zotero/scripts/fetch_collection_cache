import requests
import json
ZOTERO_API_KEY = "V6wR7rRqgvPGyJKf0YdTy1L6"  # Replace with your API key
ZOTERO_USER_ID = "15714349"  # Replace with your user ID
ZOTERO_LIBRARY_TYPE = "user"  # Or 'group' for group libraries

CACHE_FILE = "zotero_collection_cache.json"

def fetch_collections():
    headers = {"Zotero-API-Key": ZOTERO_API_KEY}
    base_url = f"https://api.zotero.org/{ZOTERO_LIBRARY_TYPE}s/{ZOTERO_USER_ID}/collections"
    collections = []
    start = 0

    while True:
        response = requests.get(f"{base_url}?limit=100&start={start}", headers=headers)
        if response.status_code != 200:
            print(f"Error fetching collections. Status: {response.status_code}, Response: {response.text}")
            break

        batch = response.json()
        if not batch:
            break

        collections.extend(batch)
        start += len(batch)

    # Save collections to a JSON file
    with open(CACHE_FILE, "w", encoding="utf-8") as file:
        json.dump(collections, file, indent=4)

    print(f"Fetched {len(collections)} collections and saved to {CACHE_FILE}")

# Fetch and cache collections
fetch_collections()

# Input and output file paths
input_file = "zotero_collection_cache.json"
output_file = "zotero_collection_cache_fixed.json"

# Load the JSON data
with open(input_file, "r", encoding="utf-8") as file:
    data = json.load(file)

# Convert list to dictionary format
collection_dict = {}
for entry in data:
    if isinstance(entry, dict) and "key" in entry and "name" in entry:
        collection_dict[entry["name"]] = entry["key"]

# Save the transformed data
with open(output_file, "w", encoding="utf-8") as file:
    json.dump(collection_dict, file, indent=4)

print(f"Converted JSON saved to {output_file}")